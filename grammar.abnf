IDENTIFIER = 1*(ALPHA / "_") *(ALPHA / DIGIT / "_")
KEYWORD_PROC = %s"proc"

module = *declaration

declaration = IDENTIFIER ":" [expression] (":" / "=") declaration_or_expression
declaration =/ IDENTIFIER ":" declaration_or_expression
declaration_or_expression = proc_declaration / expression

parameter_list = *(declaration ",") [declaration]

argument = named_argument / expression
named_argument = IDENTIFIER "=" expression
argument_list = *(argument ",") [argument]

proc_declaration = KEYWORD_PROC "(" parameter_list ")" [LF / scope]

expression = term *(("+" / "-") term)
term = factor *(("*" / "/") factor)
factor = "(" expression ")" / primary postfix*
primary = INTEGER
postfix = call / cast / slice / array_access / field_access
call = "(" argument_list ")"
cast = ".(" expression ")"
slice = "[" [expression] ":" [expression] "]"
array_access = "[" expression "]"
field_access = "." IDENTIFIER
